//
// Created by MZuy on 3/29/2023.
//

#ifndef BTL_RESOURCES_H
#define BTL_RESOURCES_H
#include <SDL.h>
#include "textureManager.h"
#include "logStatus.h"

const SDL_Rect MAIN_VIEW_POINT = {12, 12, 672, 888};
const SDL_Rect PLAYING_VIEW_POINT = {12, 84, 672, 888};
const SDL_Rect GAME_STATUS_VIEW_PORT = MAIN_VIEW_POINT;

const int RESOURCES_PIXEL = 24;
enum RESOURCES_TYPE
{
    BACKGROUND = 0,
    BUTTON,
    SETTING_BUTTON,
    PACMAN,
    OBJECT,
    MAP,
    NUMBER,
    WORDS,
    SCORE,
    FRUIT,
    UNIQUE_GHOST,
    SPEECH,
    RESOURCES_TYPE_TOTAL
};
const int BACKGROUND_WIDTH = 672;
const int BACKGROUND_HEIGHT = 888;
enum BACKGROUND_TYPE
{
    BACKGROUND_MENU = 0,
    BACKGROUND_PLAYING,
    BACKGROUND_HOW_TO_PLAY,
    BACKGROUND_SETTING,
    BACKGROUND_HIGHSCORE,
    BACKGROUND_ABOUT,
    BACKGROUND_RESUME,
    BACKGROUND_SAVE_SETTING,
    BACKGROUND_EXIT_GAME,
    BACKGROUND_GAME_OVER,
    BACKGROUND_WIN_GAME,
    BACKGROUND_TYPE_TOTAL
};
const int BUTTON_WIDTH = 112*3;
const int BUTTON_HEIGHT = 24*3;
const int BUTTON_SPRITE_TOTAL = 2;
enum BUTTON_TYPE
{
    BUTTON_PLAY = 0,
    BUTTON_HOW_TO_PLAY,
    BUTTON_SETTING,
    BUTTON_HIGHSCORE,
    BUTTON_ABOUT,
    BUTTON_RESUME,
    BUTTON_EXIT_GAME,
    BUTTON_YES,
    BUTTON_NO,
    BUTTON_TYPE_TOTAL
};
enum SETTING_BUTTON_TYPE
{
    SETTING_BUTTON_VOLUME_MUSIC = 0,
    SETTING_BUTTON_VOLUME_SOUND,
    SETTING_BUTTON_CONTROL,
    SETTING_BUTTON_GRAPHIC,
    SETTING_BUTTON_TYPE_TOTAL
};
const int SETTING_BUTTON_WIDTH = 528;
const int SETTING_BUTTON_HEIGHT[SETTING_BUTTON_TYPE_TOTAL] = {72, 72, 96, 144};
const int SETTING_BUTTON_SPRITE_TOTAL = 2;
const int SETTING_BUTTON_TYPE_SPRITE[SETTING_BUTTON_TYPE_TOTAL] = {11, 11, 3, 3};

enum PACMAN_TYPE
{
    CLASSIC = 0,
    ANDROID,
    MS,
    PACMAN_TYPE_TOTAL
};
const int PACMAN_ANIMATION_FRAME = 5;
enum PACMAN_SPRITE{
    PACMAN_UP = 0,
    PACMAN_DOWN,
    PACMAN_LEFT,
    PACMAN_RIGHT,
    PACMAN_SPRITE_TOTAL,
};
const int OBJECT_PIXEL = 42;
enum OBJECT_TYPE
{
    OBJECT_PACMAN = 0,
    OBJECT_PACMAN_ANDROID,
    OBJECT_PACMAN_MS,
    OBJECT_BLINKY,
    OBJECT_PINKY,
    OBJECT_INKY,
    OBJECT_CLYDE,
    OBJECT_FRIGHTENED_GHOST,
    OBJECT_EATEN_GHOST,
    OBJECT_PACMAN_DEATH,
    OBJECT_DOT,
    OBJECT_DOT_STATUS,
    OBJECT_LEVEL,
    OBJECT_BELL,
    OBJECT_KEY,
    OBJECT_FRUIT,
    OBJECT_PACMAN_LIFE,
    OBJECT_MYSTERY,
    OBJECT_DEADLY,
    OBJECT_SPEEDY,
    OBJECT_INVISY,
    OBJECT_FREEZY,
    OBJECT_GOLDEN,
    OBJECT_GOLDEN_EXHAUSTED_DEFAULT,
    OBJECT_GOLDEN_EXHAUSTED_YELLOW,
    OBJECT_GOLDEN_DEATH,
    OBJECT_TYPE_TOTAL
};
const int GHOST_ANIMATION_FRAME = 2;
enum FRIGHTENED_GHOST_SPRITE{
    FRIGHTENED_GHOST_DEFAULT = 0,
    FRIGHTENED_GHOST_WHITE,
    FRIGHTENED_GHOST_SPRITE_TOTAL
};
enum EATEN_GHOST_SPRITE{
    EATEN_GHOST_UP = 0,
    EATEN_GHOST_DOWN,
    EATEN_GHOST_LEFT,
    EATEN_GHOST_RIGHT,
    EATEN_GHOST_SPRITE_TOTAL
};
enum GHOST_SPRITE{
    GHOST_UP = 0,
    GHOST_DOWN,
    GHOST_LEFT,
    GHOST_RIGHT,
    GHOST_UPGRADE,
    GHOST_SPRITE_TOTAL,
};
const int PACMAN_DEATH_ANIMATION_FRAME = 11;
const int PACMAN_DEATH_SPRITE_TOTAL = 11;

const int DOT_ANIMATION_FRAME = 6;
enum DOT_SPRITE{
    DEFAULT_DOT = 0,
    POWER_DOT,
    SPEED_DOT,
    INVISIBLE_DOT,
    TIME_FREE_DOT,
    DOT_SPRITE_TOTAL,
};
const int DOT_STATUS_WIDTH = 42;
const int DOT_STATUS_HEIGHT = 42;
enum DOT_STATUS{
    POWER_DOT_STATUS = 0,
    CONFUSED_STATUS,
    SPEED_DOT_STATUS,
    SLOW_DOWN_STATUS,
    INVISIBLE_DOT_STATUS,
    BLIND_STATUS,
    TIME_FREE_DOT_STATUS,
    FREEZE_STATUS,
    DOT_STATUS_TOTAL
};
enum LEVEL_TYPE{
    LEVEL_CHERRY = 0,
    LEVEL_STRAWBERRY,
    LEVEL_ORANGE,
    LEVEL_APPLE,
    LEVEL_MELON,
    LEVEL_BANANA,
    LEVEL_WATER_MELON,
    LEVEL_MANGO,
    LEVEL_TYPE_TOTAL
};
const int MAP_WIDTH = 672;
const int MAP_HEIGHT = 744;
enum MAP_TYPE{
    MAP_DEFAULT = 0,
    MAP_INVERSE,
    MAP_TYPE_TOTAL
};
const int NUMBER_WIDTH = 24;
const int NUMBER_HEIGHT = 24;
const int NUMBER_TOTAL = 10;
enum NUMBER_TYPE {
    NUMBER_DEFAULT = 0,
    NUMBER_BLUE,
    NUMBER_TYPE_TOTAL,
};
const int WORDS_WIDTH = 24;
const int WORDS_HEIGHT = 24;
const int WORDS_TOTAL = 30;
enum WORDS_TYPE{
    WORDS_DEFAULT = 0,
    WORDS_BLUE,
    WORDS_TYPE_TOTAL,
};
const int SCORE_WIDTH = 96;
const int SCORE_HEIGHT = 48;
enum SCORE_TYPE{
    SCORE_DEFAULT = -1,
    SCORE_EAT_GHOST = 0,
    SCORE_EAT_FRUIT = 8,
    SCORE_TYPE_TOTAL = 16,
};
const int FRUIT_WIDTH = 42;
const int FRUIT_HEIGHT = 42;
const int FRUIT_ANIMATION_FRAME = 4;
const int FRUIT_SPRITE_TOTAL = 4;
enum FRUIT_TYPE
{
    CHERRY = 0,
    STRAWBERRY,
    ORANGE,
    APPLE,
    MELON,
    BANANA,
    WATERMELON,
    MANGO,
    FRUIT_TYPE_TOTAL
};
const int UNIQUE_GHOST_WIDTH = 42;
const int UNIQUE_GHOST_HEIGHT = 42;
const int UNIQUE_GHOST_ANIMATION_FRAME = GHOST_ANIMATION_FRAME;
enum UNIQUE_GHOST_TYPE{
    MYSTERY = 0,
    DEADLY,
    SPEEDY,
    INVISY,
    FREEZY,
    GOLDEN,
    GOLDEN_EXHAUSTED,
    GOLDEN_DEATH,
    UNIQUE_GHOST_TYPE_TOTAL
};
enum UNIQUE_GHOST_GOLDEN_EXHAUSTED_TYPE{
    UNIQUE_GHOST_GOLDEN_EXHAUSTED_DEFAULT = 0,
    UNIQUE_GHOST_GOLDEN_EXHAUSTED_YELLOW,
    UNIQUE_GHOST_GOLDEN_EXHAUSTED_TYPE_TOTAL
};
const int UNIQUE_GHOST_MYSTERY_ANIMATION_FRAME = GHOST_ANIMATION_FRAME;

enum UNIQUE_GHOST_MYSTERY_SPRITE{
    UNIQUE_GHOST_MYSTERY_DEFAULT = 0,
    UNIQUE_GHOST_MYSTERY_WHITE = 2,
    UNIQUE_GHOST_MYSTERY_UPGRADE_DEFAULT = 4,
    UNIQUE_GHOST_MYSTERY_UPGRADE_WHITE = 6,
    UNIQUE_GHOST_MYSTERY_SPRITE_TOTAL = 8
};
const int UNIQUE_GHOST_GOLDEN_DEATH_ANIMATION_FRAME = 8;

enum UNIQUE_GHOST_SPRITE
{
    UNIQUE_GHOST_UP = 0,
    UNIQUE_GHOST_RIGHT = 2,
    UNIQUE_GHOST_DOWN = 4,
    UNIQUE_GHOST_LEFT = 6,
    UNIQUE_GHOST_SPRITE_TOTAL = 8
};

enum SPEECH_TYPE
{
    SPEECH_UPGRADE = 0,
    SPEECH_SHOW_UP,
    SPEECH_TYPE_TOTAL
};

enum SPEECH_UPGRADE_TYPE
{
    SPEECH_UPGRADE_BLINKY = 0,
    SPEECH_UPGRADE_PINKY,
    SPEECH_UPGRADE_INKY,
    SPEECH_UPGRADE_CLYDE,
    SPEECH_UPGRADE_TOTAL
};
const int SPEECH_UPGRADE_WIDTH = 132;
const int SPEECH_UPGRADE_HEIGHT = 78;

const int SPEECH_SHOW_UP_TOTAL = 2;
const int SPEECH_SHOW_UP_WIDTH = 156;
const int SPEECH_SHOW_UP_HEIGHT = 78;

///HP bar
const int HP_BAR_WIDTH = 336;
const int HP_BAR_HEIGHT = 48;
const int HP_WIDTH = 312;
const int HP_HEIGHT = 24;
class Resources {
public:
    Resources();
    ~Resources();

    void init(textureManager* textureManager);

    void load();

    void create();

    void free();

    void close();

    SDL_Texture* getTexture(const RESOURCES_TYPE type);

    SDL_Rect getRect(const RESOURCES_TYPE type, const int index);

    SDL_Rect getSprite(const BACKGROUND_TYPE type);
    SDL_Rect getSprite(const BUTTON_TYPE type, const bool clickable);
    SDL_Rect getSprite(const SETTING_BUTTON_TYPE type, const bool clickable, const int currentState);
    SDL_Rect getSprite(const OBJECT_TYPE type, const int spriteValue = 0);
    SDL_Rect getSprite(const MAP_TYPE type);
    SDL_Rect getSprite(const NUMBER_TYPE type, const int num);
    SDL_Rect getSprite(const SCORE_TYPE type, const int spriteValue);
    SDL_Rect getSprite(const FRUIT_TYPE type, const int spriteValue = 0);
    SDL_Rect getSprite(const SPEECH_TYPE type, const int spriteValue = 0);
    SDL_Rect getHealthBarSprite();
    SDL_Rect getHealthSprite(const Uint16 currentHealth, const Uint16 maxHealth);

private:
    Log* consoleResources = new Log("Resources");

    SDL_Texture* background;
    SDL_Texture* button;
    SDL_Texture* setting_button;
    SDL_Texture* pacman;
    SDL_Texture* object;
    SDL_Texture* labyrinth;
    SDL_Texture* number;
    SDL_Texture* alphabet;
    SDL_Texture* score;
    SDL_Texture* fruit;
    SDL_Texture* unique_ghost;
    SDL_Texture* speech;

    ///Sprites
    SDL_Rect backgroundSprite[BACKGROUND_TYPE_TOTAL];
    SDL_Rect buttonSprite[BUTTON_TYPE_TOTAL][BUTTON_SPRITE_TOTAL];
    SDL_Rect* settingButtonSprite[SETTING_BUTTON_TYPE_TOTAL][SETTING_BUTTON_SPRITE_TOTAL];
    SDL_Rect frightenedGhost[FRIGHTENED_GHOST_SPRITE_TOTAL];
    SDL_Rect eatenGhost[EATEN_GHOST_SPRITE_TOTAL];
    SDL_Rect pacmanSprite[PACMAN_SPRITE_TOTAL];
    SDL_Rect msPacmanSprite[PACMAN_SPRITE_TOTAL];
    SDL_Rect pacmanAndroidSprite[PACMAN_SPRITE_TOTAL];
    SDL_Rect blinky[GHOST_SPRITE_TOTAL];
    SDL_Rect mystery[UNIQUE_GHOST_MYSTERY_SPRITE_TOTAL];
    SDL_Rect deadly[UNIQUE_GHOST_SPRITE_TOTAL];
    SDL_Rect pinky[GHOST_SPRITE_TOTAL];
    SDL_Rect speedy[UNIQUE_GHOST_SPRITE_TOTAL];
    SDL_Rect inky[GHOST_SPRITE_TOTAL];
    SDL_Rect invisy[UNIQUE_GHOST_SPRITE_TOTAL];
    SDL_Rect clyde[GHOST_SPRITE_TOTAL];
    SDL_Rect freezy[UNIQUE_GHOST_SPRITE_TOTAL];
    SDL_Rect golden[UNIQUE_GHOST_SPRITE_TOTAL];
    SDL_Rect goldenExhausted[UNIQUE_GHOST_GOLDEN_EXHAUSTED_TYPE_TOTAL][UNIQUE_GHOST_SPRITE_TOTAL];
    SDL_Rect goldenDeath[UNIQUE_GHOST_SPRITE_TOTAL];
    SDL_Rect pacmanDeath[PACMAN_DEATH_SPRITE_TOTAL];
    SDL_Rect dot[DOT_SPRITE_TOTAL];
    SDL_Rect dotStatus[DOT_STATUS_TOTAL];
    SDL_Rect level[FRUIT_TYPE_TOTAL];
    SDL_Rect bell, key, pacmanLife;
    SDL_Rect mapSprite[MAP_TYPE_TOTAL];
    SDL_Rect numberSprite[NUMBER_TYPE_TOTAL][NUMBER_TOTAL];
    SDL_Rect wordsSprite[WORDS_TYPE_TOTAL][WORDS_TOTAL];
    SDL_Rect scoreSprite[SCORE_TYPE_TOTAL];
    SDL_Rect fruitSprite[FRUIT_TYPE_TOTAL][FRUIT_SPRITE_TOTAL];
    SDL_Rect speechUpgrade[SPEECH_UPGRADE_TOTAL];
    SDL_Rect speechShowUp[SPEECH_SHOW_UP_TOTAL];
    SDL_Rect healthBar, healthPoint;

    ///Texture
    textureManager* resourcesManager;

};


#endif //BTL_RESOURCES_H
